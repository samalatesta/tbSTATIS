[{"path":"https://samalatesta.github.io/tbSTATIS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tbSTATIS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tutorial for tbSTATIS","text":"tutorial introduces tbSTATIS package walks example using tbSTATIS classify tuberculosis (TB) disease severity. First install tbSTATIS : want results match tutorial, first set seed match: load package running: often collect information multiple data sources symptoms, sputum culture, sputum smear microscopy, chest radiography process diagnosing persons TB. information used inform TB diagnosis, also strongly correlated TB disease severity. Common approaches categorizing TB severity include using smear microscopy cavitation chest x-ray alone offering binary view TB disease spectrum. developed tuberculosis SeveriTy Assessment Tool Informed Stratification (TB-STATIS) data-driven approach classifying TB disease severity integrates information multiple data sources time TB diagnosis assign individuals predicted disease severity class. TB-STATIS requires cross-sectional data input require knowing clinical outcome part classification process.","code":"# install.packages(\"devtools\") devtools::install_github(\"samalatesta/tbSTATIS\") set.seed(0) library(tbSTATIS) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union"},{"path":[]},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"analysis-workflow","dir":"Articles","previous_headings":"","what":"Analysis Workflow","title":"Tutorial for tbSTATIS","text":"recommend following workflow general guide analyzing data tbSTATIS. Functions required listed parentheses: 1. Visualize clinical measures (plot_states()) 2. Estimate model (fit_STATIS()) 3. Check likelihood ascent plot (plot_likes()) 4. Estimate model m bootstrap resamples (bootstrap_seq()) 5. Visualize uncertainty making positional variance diagram (pvd()) 6. Obtain predicted disease class observation plot distribution (pred_class() plot_class())","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"example-data-set","dir":"Articles","previous_headings":"","what":"Example Data Set","title":"Tutorial for tbSTATIS","text":"provide synthetic data set TBData tbSTATIS package. use data set walk example analyzing data tbSTATIS classify TB disease severity.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"description","dir":"Articles","previous_headings":"Example Data Set","what":"Description","title":"Tutorial for tbSTATIS","text":"table , provide description variable included data set. data set contains 250 rows row represents data observed unique individual. 10 columns data set. individual, record value 6 clinical states corresponding 4 clinical measures, include 2 covariates. motivation including covariates often interested associations different variables disease severity. covariate simulated positively correlated disease class.","code":"data(TBData) str(TBData) #> 'data.frame':    250 obs. of  10 variables: #>  $ Index: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ class: num  0 1 2 4 2 2 0 3 0 0 ... #>  $ X1   : int  0 0 0 1 0 0 0 1 0 0 ... #>  $ X2   : int  1 1 1 1 1 1 0 1 0 0 ... #>  $ X3   : int  0 0 0 1 0 0 0 1 0 0 ... #>  $ X4   : int  0 0 0 1 1 1 0 0 0 0 ... #>  $ X5   : int  0 0 1 1 0 0 0 0 0 0 ... #>  $ X6   : int  0 1 1 1 1 1 0 1 0 0 ... #>  $ C1   : int  0 0 1 1 1 1 0 1 1 0 ... #>  $ C2   : num  1.455 3.3 1.547 4.263 -0.278 ..."},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"true-disease-sequence","dir":"Articles","previous_headings":"Example Data Set","what":"True disease sequence","title":"Tutorial for tbSTATIS","text":"ground truth sequence states used generate TBData. 4 disease classes. States X2, X6 belong class 1:","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"data-summary","dir":"Articles","previous_headings":"Example Data Set","what":"Data Summary","title":"Tutorial for tbSTATIS","text":"provide first 6 rows example data set. third observation data set disease class 2. States X2, X5, X6 occurred indicated value 1, states X1, X3, X5 occurred indicated value 0. generated data set setting p 0.9 individual’s data may align perfectly true disease class. example, observation 3 5 class 2. Given ground truth sequence, expect X2, X4, X6 value 1. observation 5 true, observation 3, X4 equal 0 instead X5 equal 1. distribution disease class. can summarize true disease class using simulated data set. simulated disease class using uniform distribution, expect classes approximately equally present data. Notice disease class 0 whereas true disease sequence . class 0 equivalent individual earliest state clinical measure. distributions covariate.","code":"head(TBData) #>   Index class X1 X2 X3 X4 X5 X6 C1     C2 #> 1     1     0  0  1  0  0  0  0  0  1.455 #> 2     2     1  0  1  0  0  0  1  0  3.300 #> 3     3     2  0  1  0  0  1  1  1  1.547 #> 4     4     4  1  1  1  1  1  1  1  4.263 #> 5     5     2  0  1  0  1  0  1  1 -0.278 #> 6     6     2  0  1  0  1  0  1  1  2.363 prop.table(table(TBData$class)) #>  #>     0     1     2     3     4  #> 0.236 0.208 0.164 0.160 0.232 prop.table(table(TBData$C1)) #>  #>     0     1  #> 0.436 0.564 fivenum(TBData$C2) #> [1] -1.8160  0.7800  1.5345  2.4420  4.8320"},{"path":[]},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"visualize-clinical-states","dir":"Articles","previous_headings":"Example analysis","what":"Visualize clinical states","title":"Tutorial for tbSTATIS","text":"Prior fitting model, good practice first visualize data using. can plot data using plot_states function. function first calculates frequency state occurring orders states frequent least frequent. ordered states expected disease sequence data set accumulation states within clinical measure correspond severe disease classes. sort observations ordered states. plot observation visualize well data follow expected disease sequence. x-axis corresponds observations sorting y-axis corresponds clinical states ordered frequency. Blue indicates state occurred white indicates state occurred. data aligns well expected disease sequence, expect top left area plot mostly white bottom right consistently blue. present plot running plot_states function TBData. y axis ordered X6, X2, X4, X1, X3, X5. aligns ground truth sequence X2, X6 class 1 followed X4 inc class 2, X1 X3 class 3 finally X5 class 4. see data align well ground truth sequence overall states occurring upper left hand portion plot. result us using value .9 clinical states simulated data set. p lower, expect see variation.","code":"plot_states(TBData, id.var=\"Index\", state.vars=c(\"X1\", \"X2\", \"X3\", \"X4\", \"X5\", \"X6\"))"},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"estimate-model","dir":"Articles","previous_headings":"Example analysis","what":"Estimate model","title":"Tutorial for tbSTATIS","text":"fit TB-STATIS using fit_STATIS function. Prior running model, data set formatted clinical state recorded value 1 indicate clinical state occurred 0 otherwise. observations missing data excluded prior model fitting. require user also input data frame provides set clinical states clinical measure clinical state corresponds column name data set used fit model.provide information data frame TBData use fit model example. must also specify value p state. fit_STATIS function returns list. One object list called ml_seq data frame 4 columns. ‘sub’ column data frame maximum likelihood sequence. present maximum likelihood sequence TBData. ran model 3 start points 250 iterations practice minimum number start points 10 least 2000 iterations. output, maximum likelihood sequence ({X6, X2}, {X4}, {X1, X3},{X5}) ground truth sequence.","code":"measure_info <- data.frame(clinical_measure=c(\"measure1\", \"measure2\", \"measure2\", \"measure3\", \"measure3\", \"measure4\"),clinical_state = c(1,1,2,1,2,1), state_name=c(c(\"X1\", \"X2\", \"X3\", \"X4\", \"X5\", \"X6\")))  print(measure_info) #>   clinical_measure clinical_state state_name #> 1         measure1              1         X1 #> 2         measure2              1         X2 #> 3         measure2              2         X3 #> 4         measure3              1         X4 #> 5         measure3              2         X5 #> 6         measure4              1         X6 model1 = fit_STATIS(data=TBData[,c(3:8)], p_vec=c(.9,.9,.9,.9,.9,.9), clinical_info=measure_info, nstart=3,initial_iter= 250)  #print maximum likelihood estimate print(model1$ml_seq) #>        bio event var_name pos order sub #> 1 measure2     1       X2   2     1   1 #> 2 measure4     1       X6   6     2   1 #> 3 measure3     1       X4   4     3   2 #> 4 measure1     1       X1   1     4   3 #> 5 measure2     2       X3   3     5   3 #> 6 measure3     2       X5   5     6   4"},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"likelihood-ascent","dir":"Articles","previous_headings":"Example analysis","what":"Likelihood ascent","title":"Tutorial for tbSTATIS","text":"estimating model, assess model convergence plotting likelihood ascent start point using plot_likes function. log-likelihoods iterations can accessed saved model object. example, saved model model1 can call model1$loglikes dataframe contains log-likelihoods across iterations start points. present likelihood ascent plot estimating model TBData. initializations converge log-likelihood used 250 iterations shorten computational time tutorial. running TB-STATIS real data, likely model converge least 2000 iterations. fitting model recommend checking convergence plotting likelihood ascent convergence slow occur increase total number iterations /start points rerun model.","code":"#first 6 rows of loglikes data frame head(model1$loglikes) #>   start iter      like #> 2     1    1 -998.7502 #> 3     1    2 -965.6635 #> 4     1    3 -924.7706 #> 5     1    4 -775.9737 #> 6     1    5 -775.9737 #> 7     1    6 -775.9737  #plot log-likelihoods for all iterations and start points plot_likes(model1$loglikes)"},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"bootstrap-resamples","dir":"Articles","previous_headings":"Example analysis","what":"Bootstrap resamples","title":"Tutorial for tbSTATIS","text":"fitting model, recommend constructing positional variance diagram visualize uncertainty maximum likelihood sequence. provide function bootstrap_seq refit model chosen number resamples replacement observed data. recommend using least 100 resamples. function requires inputs fit_STATIS additional argument z total number bootstrap resamples. function returns data frame row represents sequence estimated 1 resample observed data. ran bootstrap_seq TBData estimated sequence . present first 6 rows output. model fits data well, expect majority bootstrap sequences maximum likelihood sequence. Like fit_STATIS, practice mininum 2000 iterations 10 starting sequences used.","code":"boot_seqs = bootstrap_seq(z=10,data=TBData[,c(3:8)], p_vec=c(.9,.9,.9,.9,.9,.9), clinical_info=measure_info, nstart=3,initial_iter= 250)  head(boot_seqs)"},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"positional-variance-diagram","dir":"Articles","previous_headings":"Example analysis","what":"Positional variance diagram","title":"Tutorial for tbSTATIS","text":"obtaining bootstrap sequences, plot positional variance diagram (PVD) visualize location degree uncertainty maximum likelihood sequence using function pvd. function requires data frame bootstrap sequences maximum likelihood sequence input. function returns heatmap x-axis disease class y axis clinical state order maximum likelihood sequence. square plot represents proportion bootstrap sequences state occurs disease class. Darker colors indicate higher proportion/degree certainty. disease class estimated state maximum likelihood sequence outlined black. expect highest proportion bootstrap samples state occur class state occurs maximum likelihood sequence. provide PVD bootstrap samples TBData . majority bootstrap sequences equivalent maximum likelihood sequence. important note x axis pvd ranges 1 6 account fact bootstrap sequences may different number disease classes maximum likelihood estimate. maximum number classes always equal total number clinical states; example data set 6.","code":"pvd(boot_seqs = boot_seqs, ml=model1$ml_seq)"},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"predicted-disease-class","dir":"Articles","previous_headings":"Example analysis","what":"Predicted disease class","title":"Tutorial for tbSTATIS","text":"primary goal using TB-STATIS understand TB disease severity obtain predicted disease class individual sample. include function pred_class calculates disease class greatest probability given individual’s observed data estimated maximum likelihood sequence. Additionally, include function plot_class generates bar plot distribution predicted disease class. present plot predicted disease class example data set. see disease class distribution approximately uniform expected since used uniform distribution generate true disease class. practice, using data TB clinics, expect see left-skewed distribution disproportionately observe individuals severe disease. Predicted disease class can analyzed outcome researchers frequently interested factors associated increased disease severity. Disease class can also use secondary analysis predictor modeling outcomes interest.","code":"#save estimated sequence from model est_seq=model1$ml_seq  #calculate predicted disease class classdf <- pred_class(data=TBData[,c(3:8)], est_seq, c(.9,.9,.9,.9,.9,.9))  #print first rows of data frame that includes predicted disease class head(classdf) #>   X1 X2 X3 X4 X5 X6 pred_stage #> 1  0  1  0  0  0  0          0 #> 2  0  1  0  0  0  1          1 #> 3  0  1  0  0  1  1          1 #> 4  1  1  1  1  1  1          4 #> 5  0  1  0  1  0  1          2 #> 6  0  1  0  1  0  1          2  #plot predicted disease class plot_class(pred_class=classdf$pred_stage)"},{"path":"https://samalatesta.github.io/tbSTATIS/articles/tbSTATIS_vignette.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Tutorial for tbSTATIS","text":"tutorial, illustrated use tbSTATIS package analyze data classify TB severity using clinical measures observed time TB diagnosis. example data set TBData, demonstrated following: Visualize clinical states Estimate disease sequence Check likelihood ascent plot model convergence Generate bootstrap resamples plot positional variance diagram visualize uncertainty Calculate predicted disease class plot distribution conclude considerations best practices practitioners wanting analyze data tbSTATIS. method present motivated prior work event-based modeling largely used understand progression neurodegenerative diseases. applying method TB data, concerned drawing conclusions disease progression. using TB-STATIS classify disease severity time diagnosis . Fitting TB-STATIS requires collecting data strongly correlated disease severity. TB disease, include measures well-established predictors treatment outcome TB sterilization (cavitation, smear status, etc) often used individually stratify patients categories represent advanced versus early disease. Fitting TB-STATIS also requires user input value p clinical state included model. TB diagnostic measures chest x-ray data, expect p close 1. user always run sensitivity analysis decrease p original model fit assess sensitivity maximum likelihood sequence p. theory can include many clinical measures states possible fitting TB-STATIS. performance method decreases smaller sample sizes, larger number clinical states, lower values p state. consider factors choosing data estimate model. additional challenge includes non-convergence estimating maximum likelihood sequence. can potentially mitigated increasing number iterations estimation comes cost increased computation time. user always check likelihood ascent plot determine convergence reached chosen number iterations. Finally, always best visualize observed data fitting model also provides user expected disease sequence compare maximum likelihood estimate. especially helpful using TB-STATIS hypothesis generating tool already strong understanding disease sequence severity.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samantha Malatesta. Author, maintainer, copyright holder.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Malatesta S (2025). tbSTATIS: Tuberculosis SeveriTy Assessment Tool Informed Stratification. R package version 0.1.0, https://samalatesta.github.io/tbSTATIS/.","code":"@Manual{,   title = {tbSTATIS: Tuberculosis SeveriTy Assessment Tool for Informed Stratification},   author = {Samantha Malatesta},   year = {2025},   note = {R package version 0.1.0},   url = {https://samalatesta.github.io/tbSTATIS/}, }"},{"path":"https://samalatesta.github.io/tbSTATIS/index.html","id":"tbstatis","dir":"","previous_headings":"","what":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","title":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","text":"tbSTATIS package implements tuberculosis SeveriTy Assessment Tool Informed Stratification (TB-STATIS) classify TB disease severity individuals using data collected time diagnosis. include functions estimate model, quantify model uncertainty, visualize results. provide detailed vignette walks example analysis using tbSTATIS. formal discussion theory behind usage method, see following paper: Malatesta S, Jacobson KR, Horsburgh CR, Farhat MR, Gile KJ, Kolaczyk ED, White LF. Integrated Data-Driven Model Clinical Phenotyping Tuberculosis Disease Severity. Code replicate simulation results paper available .","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","text":"can install development version tbSTATIS GitHub. recommend setting option build_vignettes=T installing package vignette can accessed local R environment (note: may take ). devtools package must installed prior installing tbSTATIS.","code":"# install.packages(\"devtools\") devtools::install_github(\"samalatesta/tbSTATIS\", build.vignette = T)"},{"path":"https://samalatesta.github.io/tbSTATIS/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","text":"use tbSTATIS R scripts projects, load package using: detailed information use function, please refer package documentation vignette. vignette can viewed locally package installation knitted html also included \\vignettes directory.","code":"library(tbSTATIS) vignette(package=\"tbSTATIS\")"},{"path":"https://samalatesta.github.io/tbSTATIS/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","text":"Comprehensive documentation tbSTATIS functions available within R. can access documentation using ? operator followed function name. example:","code":"?plot_states"},{"path":"https://samalatesta.github.io/tbSTATIS/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","text":"tbSTATIS distributed MIT License.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Tuberculosis SeveriTy Assessment Tool for Informed Stratification","text":"questions, please contact: Samantha Malatesta (samalate@bu.edu)","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/TBData.html","id":null,"dir":"Reference","previous_headings":"","what":"TBData — TBData","title":"TBData — TBData","text":"simulated data set fit TB-STATIS. data contains 4 clinical measures.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/TBData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TBData — TBData","text":"","code":"TBData"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/TBData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"TBData — TBData","text":"data frame 250 rows 8 columns: Index unique row identifier class disease class X1 Clinical measure 1, state 1 X2 Clinical measure 2, state 1 X3 Clinical measure 2, state 2 X4 Clinical measure 3, state 1 X5 Clinical measure 3, state 2 X6 Clinical measure 4, state 1 C1 Covariate, categorical C2 Covariate, continuous","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/bootstrap_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantify sequence uncertainty with bootstrap resampling — bootstrap_seq","title":"Quantify sequence uncertainty with bootstrap resampling — bootstrap_seq","text":"Quantify sequence uncertainty bootstrap resampling","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/bootstrap_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantify sequence uncertainty with bootstrap resampling — bootstrap_seq","text":"","code":"bootstrap_seq(z, data, clinical_info, p_vec, nstart, initial_iter)"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/bootstrap_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantify sequence uncertainty with bootstrap resampling — bootstrap_seq","text":"z Number bootstrap resamples perform. data data frame observed data. clinical_info data frame clinical measures clinical states. p_vec vector clinical measure accuracies fit TB-STATIS. nstart Number initialized sequences run TB-STATIS. initial_iter Number iterations TB-STATIS.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/bootstrap_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantify sequence uncertainty with bootstrap resampling — bootstrap_seq","text":"data frame sequences estimated bootstrap resamples.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/fit_STATIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit TB-STATIS — fit_STATIS","title":"Fit TB-STATIS — fit_STATIS","text":"Estimate maximum likelihood sequence TB-STATIS. User must input observed data, set clinical states measures include model, vector probabilities indicating accuracy clinical measure.'fit_STATIS' returns maximum likelihood sequence, log-likelihoods calculated estimation.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/fit_STATIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit TB-STATIS — fit_STATIS","text":"","code":"fit_STATIS(data, p_vec, clinical_info, nstart, initial_iter)"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/fit_STATIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit TB-STATIS — fit_STATIS","text":"data data frame observed data. p_vec vector clinical measure accuracies. clinical_info data frame clinical measures states. nstart Number sequence initializations maximum likelihood search. initial_iter Number iterations maximum likelihood search.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/fit_STATIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit TB-STATIS — fit_STATIS","text":"list results.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Propose simultaneous clinical states — get_group","title":"Propose simultaneous clinical states — get_group","text":"Generate simulataneous disease sequence given sequence clinical states.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propose simultaneous clinical states — get_group","text":"","code":"get_group(info = data.frame(), all_seqs)"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propose simultaneous clinical states — get_group","text":"info data frame. all_seqs Data frame possible disease sequences.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propose simultaneous clinical states — get_group","text":"data frame.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate log-likelihood — get_likelihood","title":"Calculate log-likelihood — get_likelihood","text":"Calculate likelihood given observed data, sequence S, vector clinical measure accuracies p_vec.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate log-likelihood — get_likelihood","text":"","code":"get_likelihood(data = data.frame(), S = data.frame(), p_vec = vector())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate log-likelihood — get_likelihood","text":"data data frame. S data frame. p_vec vector","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate log-likelihood — get_likelihood","text":"list.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence initialization — get_seq","title":"Sequence initialization — get_seq","text":"Generate initial sequence start point maximum likelihood search.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence initialization — get_seq","text":"","code":"get_seq(info = data.frame())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence initialization — get_seq","text":"info data frame containing clinical measures corresponding clinical states generate sequence .","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/get_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence initialization — get_seq","text":"data frame.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Disease class distribution — plot_class","title":"Disease class distribution — plot_class","text":"Generate bar plot disease class distribution using vector containing predicted disease class individual fitting TB-STATIS.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disease class distribution — plot_class","text":"","code":"plot_class(pred_class = vector())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disease class distribution — plot_class","text":"pred_class vector predicted disease classes.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disease class distribution — plot_class","text":"ggplot object.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood ascent plot — plot_likes","title":"Likelihood ascent plot — plot_likes","text":"Generate line plot likelihood ascent fitting TB-STATIS. x-axis iteration number, y-axis log-likelihood, line represents log-likelihood iteration single initialized sequence.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood ascent plot — plot_likes","text":"","code":"plot_likes(likes = data.frame())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood ascent plot — plot_likes","text":"likes data frame three columns containing log-likelihood iteration initialization.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood ascent plot — plot_likes","text":"ggplot object.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical states visualization — plot_states","title":"Clinical states visualization — plot_states","text":"Generate plot individual-level data arranged clinical state frequency clinical states ordered frequent least frequent.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clinical states visualization — plot_states","text":"","code":"plot_states(data = data.frame(), id.var = character(), state.vars = vector())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clinical states visualization — plot_states","text":"data data frame. id.var Unique row identifier. state.vars Variable names clinical states.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/plot_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical states visualization — plot_states","text":"ggplot object.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/possible_seqs.html","id":null,"dir":"Reference","previous_headings":"","what":"All possible sequences — possible_seqs","title":"All possible sequences — possible_seqs","text":"Generate data frame possible simultaneous sequences N clinical states.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/possible_seqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All possible sequences — possible_seqs","text":"","code":"possible_seqs(N = numeric())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/possible_seqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All possible sequences — possible_seqs","text":"N Number clinical states.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/possible_seqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All possible sequences — possible_seqs","text":"data frame.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pred_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predicted disease class — pred_class","title":"Get predicted disease class — pred_class","text":"Get predicted disease class individual sample given observed data estimated disease sequence fitting TB-STATIS.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pred_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predicted disease class — pred_class","text":"","code":"pred_class(data = data.frame(), S = data.frame(), p = vector())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pred_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predicted disease class — pred_class","text":"data data frame observed data. S data frame estimated disease sequence. p vector clinical state accuracies.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pred_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predicted disease class — pred_class","text":"data frame.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pvd.html","id":null,"dir":"Reference","previous_headings":"","what":"Positional variance diagram — pvd","title":"Positional variance diagram — pvd","text":"Plot maximum likelihood sequence sequences fit using bootstrap resampling visualize uncertainty maximum likelihood sequence.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pvd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Positional variance diagram — pvd","text":"","code":"pvd(boot_seqs = data.frame(), ml = data.frame())"},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pvd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Positional variance diagram — pvd","text":"boot_seqs data frame estimated sequences obtained bootstrap resampling estimating TB-STATIS resample. ml Maximum likelihood sequence fitting TB-STATIS original data.","code":""},{"path":"https://samalatesta.github.io/tbSTATIS/reference/pvd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Positional variance diagram — pvd","text":"ggplot object.","code":""}]
